Networking:
	- synchronize objects on join
	- send flip information
	- send multiple selection move as one packet
	- create a structured format for defining packets
		- example code for sending a packet (client -> server):
			Packet *packet = PacketMove(std::vector<Object*> objects, std::vector<Vector2> locations);
			std::string data = packet.getData();
			size_t length = packet.getLength();
		- example code for parsing a received packet (client -> server):
			Packet *packet = PacketMove(data);
			std::vector<Objects*> objects = packet.getObjects();
			std::vector<Vector2> locations = packet.getLocations();

General:
	- loading settings from a file

Mechanics:
	- ability to remove selected objects
	- private areas
	- loading objects from the filesystem
	- downloading objects from the server
	- uploading objects to the server

Graphics:
	- ability to move the camera
	- ability to rotate the camera

Resources:
	- create a full set of 52 playing cards
	- dice
	- classic board game sets
		- chess
